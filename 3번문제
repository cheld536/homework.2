#include <stdio.h>
int main()
{
int i;              //정수형 변수 선언
int *ptr;           // 단일 포인터 변수선언
int **dptr;         // 이중 포인터 변수선언
i = 1234;
printf("[checking values before ptr = &i] \n");
printf("value of i == %d\n", i);                                     // 변수 i에 저장된 값을 출력
printf("address of i == %p\n", &i);                                  // i의 주소값을 출력
printf("value of ptr == %p\n", ptr);                                 // ptr 포인터의 값을 출력
printf("address of ptr == %p\n", &ptr);                              // 포인터 ptr의 주소값을 출력
ptr = &i; /* ptr is now holding the address of i */                  // i의 메모리 주소를 포인터 변수 ptr에 저장.
printf("\n[checking values after ptr = &i] \n");                     // 포인터 ptr이 변수 i의 주소값을 가리키고 난 이후의 값을 출력
printf("value of i == %d\n", i);                                     // 변수 i에 저장된 값을 출력
printf("value of ptr == %p\n", ptr);                                 // 포인터 변수 ptr의 값을 출력
printf("address of ptr == %p\n", &ptr);                              // 포인터 ptr의 주소값을 출력
printf("value of *ptr == %d\n", *ptr);                               // 포인터를 한 번 역 참조하여 i의 값을 출력
dptr = &ptr; /* dptr is now holding the address of ptr */            // 포인터 dptr이 ptr의 주소값을 가르킨다
printf("\n[checking values after dptr = &ptr] \n");                  // 포인터 dptr이 ptr의 값을 가르키고 난 이후에 변화된 값들을 확인한다.
printf("value of i == %d\n", i);                                     // 변수 i에 저장된 값을 출력
printf("address of i == %p\n", &i);                                  // 변수 i의 주소값을 출력
printf("value of ptr == %p\n", ptr);                                 // 포인터 변수 ptr의 값을 출력
printf("address of ptr == %p\n", &ptr);                              // 포인터 ptr의 주소값을 출력
printf("value of *ptr == %d\n", *ptr);                               // 포인터를 한 번 역 참조하여 i의 값을 출력
printf("value of dptr == %p\n", dptr);                               // 포인터 dptr의 값을 출력
printf("address of dptr == %p\n", &dptr);                            // 포인터 dptr의 주소값을 출력
printf("value of *dptr == %p\n", *dptr);                             // 포인터를 한 번 역 참조하여 ptr의 값을 출력
printf("value of **dptr == %d\n", **dptr);                           // 포인터를 두 번 역 참조하여 i의 값을 출력
*ptr = 7777; /* changing the value of *ptr */                        // 역참조 연산자로 메모리 주소에 접근하여 7777을 저장
printf("\n[after *ptr = 7777] \n");
printf("value of i == %d\n", i);                                     // i의 값을 출력
printf("value of *ptr == %d\n", *ptr);                               // 포인터를 한 번 역 참조하여 i의 값을 출력
printf("value of **dptr == %d\n", **dptr);                           // 포인터를 두 번 역 참조하여 i의 값을 출력
**dptr = 8888; /* changing the value of **dptr */                    // 역참조 연산자로 메모리 주소에 접근하여 8888을 저장
printf("\n[after **dptr = 8888] \n");
printf("value of i == %d\n", i);                                     // i의 값을 출력
printf("value of *ptr == %d\n", *ptr);                               // 포인터를 한 번 역 참조하여 i의 값을 출력
printf("value of **dptr == %d\n", **dptr);                           // 역참조 연산자로 메모리 주소에 접근하여 8888을 저장
printf("-----------------------------------------\n");
printf("[----- [ 김윤희 ] [ 2018038014 ] -----]");                  // 내 이름과 학번을 출력한다

return 0;
}
